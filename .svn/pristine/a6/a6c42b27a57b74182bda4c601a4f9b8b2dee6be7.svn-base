package com.sl.tune.controller.clip;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.sl.tune.entity.Clip;
import com.sl.tune.entity.PageList;
import com.sl.tune.request.ClipRequest;
import com.sl.tune.request.ClipSearchRequest;
import com.sl.tune.service.ClipService;
import com.sl.tune.utility.JsonResult;
import com.sl.tune.utility.TuneException;

@Controller
public class ClipController {

	private ServletContext servletContext;
	
	private ClipService clipService;
	/**
	 * 获取列表
	 * 
	 * @param req
	 * @param map
	 * @return
	 */
	@RequestMapping(value = "/clips/{page}/{perPage}/{channel}", method = RequestMethod.GET)
	@ResponseBody
	public String list(HttpServletRequest req, @PathVariable int page, @PathVariable int perPage, @PathVariable String channel) {
		
		PageList<Clip> clips = clipService.find(new ClipSearchRequest(page, perPage, channel));
		
		return new JsonResult(req, clips).toString();
	}
	
	/**
	 * 获取单个视频信息
	 * 
	 * @param req
	 * @param map
	 * @return
	 */
	@RequestMapping(value = "/clip/{id}", method = RequestMethod.GET)
	@ResponseBody
	public String findOne(HttpServletRequest req, @PathVariable String id) {
		
		Clip clip = clipService.find(id);
		
		return new JsonResult(req, clip).toString();
	}
	
	/**
	 * 删除单个视频信息
	 * 
	 * @param req
	 * @param map
	 * @return
	 */
	@RequestMapping(value="/clip/{id}/remove/{password}", method = RequestMethod.GET)
	@ResponseBody
	public String remove(HttpServletRequest req, @PathVariable String id, @PathVariable String password) {
		
		Clip clip = null;
		try {
			clip = clipService.deleteClip(id, password);
		} catch (TuneException e) {
			return new JsonResult(e.getResult()).toString();
		}
		
		return new JsonResult(req, clip).toString();
	}
	
	/**
	 * 上传单个视频
	 * 
	 * @param file
	 * @param req
	 * @param map
	 * @return
	 */
	@RequestMapping(value = "/clip", method = RequestMethod.POST)
	@ResponseBody
	public String add(HttpServletRequest req, @RequestParam MultipartFile file, ClipRequest clipRequest)  {
		
		try {
			Clip clip = clipService.upload(servletContext, file, clipRequest);
			
			return new JsonResult(req, clip).toString();
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return null;
	}

	////////////////////////////////////////////////////////////
	// Getter and Setter
	////////////////////////////////////////////////////////////	
	public ServletContext getServletContext() {
		return servletContext;
	}

	public void setServletContext(ServletContext servletContext) {
		this.servletContext = servletContext;
	}

	public ClipService getClipService() {
		return clipService;
	}

	public void setClipService(ClipService clipService) {
		this.clipService = clipService;
	}
	
	
	
}
